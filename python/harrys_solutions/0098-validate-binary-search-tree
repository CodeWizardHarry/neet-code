class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right
class Solution:
    def isValidBST(self, root: Optional[TreeNode]) -> bool:

        # all nodes on the right side must be bigger than r
        r = 1 
        # all nodes on the left side must be smaller than l
        l = 1

        def dfs(root,l, r):
            if not root:
                return True
            l = min(l, root.val)
            r = max(r, root.val)

            left = dfs(root.left, l, r)
            right = dfs(root.right, l, r)
            







